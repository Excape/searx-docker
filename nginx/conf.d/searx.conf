server {
        listen 80;
        server_name searx.cblog.ch;

        access_log /dev/null;
        error_log /dev/null;

        return 301 https://$host$request_uri;
}

server {
        # Config based on https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=nginx-1.10.1&openssl=1.0.1t&hsts=yes&profile=modern
        listen 443 ssl;

        server_name searx.cblog.ch;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;


        access_log /dev/null;
        error_log /dev/null;

        ssl_certificate /etc/dehydrated/certs/searx.cblog.ch/fullchain.pem;
        ssl_certificate_key /etc/dehydrated/certs/searx.cblog.ch/privkey.pem;
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security max-age=15768000;

        # OCSP Stapling ---
        # fetch OCSP records from URL in ssl_certificate and cache them
        ssl_stapling on;
        ssl_stapling_verify on;

        ## verify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate /etc/dehydrated/certs/searx.cblog.ch/fullchain.pem;

        location /.well-known/acme-challenge {
            alias /var/www/dehydrated;
        }

        location / {
            proxy_pass http://filtron:4004;
            proxy_set_header        Host                 $host;
            proxy_set_header        X-Real-IP            $remote_addr;
            proxy_set_header        X-Forwarded-For      $proxy_add_x_forwarded_for;
            proxy_set_header        X-Remote-Port        $remote_port;
            proxy_set_header        X-Forwarded-Proto    $scheme;
            proxy_redirect          off;
        }
}
